// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ComponentActions Dispatches loadGeneExpression action with the right list of genes when Add is clicked 1`] = `
Object {
  "payload": Object {
    "componentUuid": "asd",
    "experimentId": "1234",
    "genes": Array [
      "Gzma",
      "Lyz2",
      "GeneA",
      "GeneB",
      "GeneC",
    ],
  },
  "type": "genes/expressionLoading",
}
`;

exports[`ComponentActions Dispatches loadGeneExpression action with the right list of genes when Add is clicked 2`] = `
Object {
  "payload": Object {
    "componentUuid": "asd",
    "genes": Array [
      "Gzma",
      "Lyz2",
      "GeneA",
      "GeneB",
      "GeneC",
    ],
    "newGenes": Object {
      "orderedGeneNames": Array [
        "GeneA",
        "GeneB",
        "GeneC",
      ],
      "rawExpression": Object {
        "datatype": undefined,
        "index": Array [
          0,
          0,
          2,
          0,
          2,
        ],
        "mathjs": "SparseMatrix",
        "ptr": Array [
          0,
          1,
          3,
          5,
        ],
        "size": Array [
          3,
          3,
        ],
        "values": Array [
          1,
          2,
          5,
          1,
          6,
        ],
      },
      "stats": Object {
        "GeneA": Object {
          "rawMean": 0.3,
          "rawStdev": 0.4,
          "truncatedMax": 1,
          "truncatedMin": 0,
        },
        "GeneB": Object {
          "rawMean": 2.3,
          "rawStdev": 2,
          "truncatedMax": 3,
          "truncatedMin": 2,
        },
        "GeneC": Object {
          "rawMean": 1.3,
          "rawStdev": 1,
          "truncatedMax": 5,
          "truncatedMin": 1,
        },
      },
      "truncatedExpression": Object {
        "datatype": undefined,
        "index": Array [
          0,
          0,
          2,
          0,
          2,
        ],
        "mathjs": "SparseMatrix",
        "ptr": Array [
          0,
          1,
          3,
          5,
        ],
        "size": Array [
          3,
          3,
        ],
        "values": Array [
          1,
          2,
          3,
          0.5,
          1,
        ],
      },
      "zScore": Object {
        "datatype": undefined,
        "index": Array [
          0,
          0,
          2,
          0,
          2,
        ],
        "mathjs": "SparseMatrix",
        "ptr": Array [
          0,
          1,
          3,
          5,
        ],
        "size": Array [
          3,
          3,
        ],
        "values": Array [
          1,
          1,
          3,
          3,
          1,
        ],
      },
    },
  },
  "type": "genes/expressionLoaded",
}
`;

exports[`ComponentActions Dispatches loadGeneExpression action with the right list of genes when Overwrite is clicked 1`] = `
Object {
  "payload": Object {
    "componentUuid": "asd",
    "experimentId": "1234",
    "genes": Array [
      "Gzma",
    ],
  },
  "type": "genes/expressionLoading",
}
`;

exports[`ComponentActions Dispatches loadGeneExpression action with the right list of genes when Overwrite is clicked 2`] = `
Object {
  "payload": Object {
    "componentUuid": "asd",
    "experimentId": "1234",
    "genes": Array [
      "Gzma",
    ],
  },
  "type": "genes/expressionLoaded",
}
`;

exports[`ComponentActions Dispatches loadGeneExpression action with the right list of genes when Remove is clicked 1`] = `
Object {
  "payload": Object {
    "componentUuid": "asd",
    "experimentId": "1234",
    "genes": Array [
      "Lyz2",
    ],
  },
  "type": "genes/expressionLoading",
}
`;

exports[`ComponentActions Dispatches loadGeneExpression action with the right list of genes when Remove is clicked 2`] = `
Object {
  "payload": Object {
    "componentUuid": "asd",
    "experimentId": "1234",
    "genes": Array [
      "Lyz2",
    ],
  },
  "type": "genes/expressionLoaded",
}
`;
